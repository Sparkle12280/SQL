This project utilized data from the database stored at https://cdn.fs.teachablecdn.com/dRmwOLQsS22FVFbXfh3x

#1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
SELECT CustomerId, FirstName, LastName, Country
FROM customers
WHERE Country != 'US';


#2.Show only the Customers from Brazil.
SELECT CustomerId, FirstName, LastName, Country
FROM customers
WHERE Country = 'Brazil';


#3. Find the Invoices of customers who are from Brazil. The resulting table should show the customers full name, Invoice ID, Date of the invoice, and billing country.
SELECT c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingCountry
FROM customers c
JOIN invoices i
ON c.CustomerId = i.CustomerId
WHERE c.Country = 'Brazil';


#4. Show the Employees who are Sales Agents.
SELECT * FROM employees
WHERE Title LIKE '%Sales % Agent%';


#5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry FROM invoices;


#6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agents full name.
SELECT i.InvoiceId, e.FirstName, e.LastName
FROM customers c
JOIN invoices i
ON c.CustomerId = i.CustomerId
JOIN employees e
ON c.SupportRepId = e.EmployeeId


#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT emp.FirstName, emp.LastName, cust.FirstName, cust.LastName, cust.Country, inv.Total
FROM invoices inv
JOIN customers cust
ON inv.CustomerId = cust.CustomerId
JOIN employees emp
ON cust.SupportRepId = emp.EmployeeId


#8. How many Invoices were there in 2009?
SELECT COUNT(invoiceId) FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';


#9. What are the total sales for 2009?
SELECT SUM(TOTAL)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';


#10. Write a query that includes the purchased track name with each invoice line ID.
SELECT tracks.Name, invoice_items.InvoiceLineId
FROM tracks
JOIN invoice_items
ON tracks.TrackId = invoice_items.TrackId;


#11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT tracks.Name, artists.name, invoice_items.InvoiceLineId
FROM tracks
JOIN invoice_items
ON tracks.TrackId = invoice_items.TrackId
JOIN albums
ON albums.AlbumId = tracks.AlbumId
JOIN artists
ON artists.ArtistId = albums.ArtistId;


#12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS 'Track', a.Title AS 'Album', m.Name AS 'Media', g.Name AS 'Genre'
FROM chinook.Tracks t
JOIN chinook.Albums a
ON t.AlbumId = a.AlbumId
JOIN chinook.Media_Types m
ON m.MediaTypeId = t.MediaTypeId
JOIN chinook.Genres g
ON g.GenreId = t.GenreId


#13. Show the total sales made by each sales agent.
SELECT e.FirstName, e.LastName, ROUND(SUM(i.Total), 2) AS 'Total Sales'
FROM employees e
JOIN customers c
ON c.SupportRepId = e.EmployeeId
JOIN invoices i
ON i.CustomerId = c.CustomerId
WHERE e.Title = 'Sales Support Agent'
GROUP BY e.FirstName;


#14. Which sales agent made the most dollars in sales in 2009?
SELECT e.FirstName, e.LastName, ROUND(SUM(i.Total), 2) AS 'Total Sales'
FROM employees e
JOIN customers c
ON c.SupportRepId = e.EmployeeId
JOIN invoices i
ON i.CustomerId = c.CustomerId
WHERE e.Title = 'Sales Support Agent'
AND i.InvoiceDate LIKE '2009%'
GROUP BY e.FirstName
ORDER BY ROUND(SUM(i.Total), 2) DESC LIMIT 1;


#15. How many playlists are there?
SELECT sum(PlaylistId)
FROM  playlists;

#16. What tracks are on the Audiobooks playlist?
SELECT playlists.Name, playlist_track.TrackId
FROM playlists
LEFT JOIN playlist_track
ON playlists.PlaylistId = playlist_track.PlaylistId
WHERE playlists.Name = 'Audiobooks';
